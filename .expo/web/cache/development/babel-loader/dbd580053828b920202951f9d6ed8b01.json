{"ast":null,"code":"import { USER_STATE_CHANGE, CLEAR_DATA } from \"../constants/index\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nexport function clearData() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_DATA\n    });\n  };\n}\nexport function fetchUser() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        dispatch({\n          type: USER_STATE_CHANGE,\n          currentUser: snapshot.data()\n        });\n      } else {\n        console.log('does not exist');\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/src/screens/redux/actions/index.js"],"names":["USER_STATE_CHANGE","CLEAR_DATA","firebase","require","clearData","dispatch","type","fetchUser","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","data","console","log"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,UAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,SAAQ,UAACC,QAAD,EAAc;AAClBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL;AAAP,KAAD,CAAR;AACH,GAFD;AAGH;AAED,OAAO,SAASM,SAAT,GAAqB;AACxB,SAAQ,UAACF,QAAD,EAAc;AAClBH,IAAAA,QAAQ,CAACM,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESR,QAAQ,CAACS,IAAT,GAAgBC,WAAhB,CAA4BC,GAFrC,EAGKC,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;AAChB,UAAIA,QAAQ,CAACC,MAAb,EAAqB;AACjBZ,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEN,iBAAR;AAA2BY,UAAAA,WAAW,EAAEI,QAAQ,CAACE,IAAT;AAAxC,SAAD,CAAR;AACH,OAFD,MAGK;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,KAXL;AAYH,GAbD;AAcH","sourcesContent":["import { USER_STATE_CHANGE, CLEAR_DATA} from '../constants/index'\nimport firebase from 'firebase'\nrequire('firebase/firestore')\n\nexport function clearData() {\n    return ((dispatch) => {\n        dispatch({type: CLEAR_DATA})\n    })\n}\n\nexport function fetchUser() {\n    return ((dispatch) => {\n        firebase.firestore()\n            .collection(\"users\")\n            .doc(firebase.auth().currentUser.uid)\n            .get()\n            .then((snapshot) => {\n                if (snapshot.exists) {\n                    dispatch({ type: USER_STATE_CHANGE, currentUser: snapshot.data() })\n                }\n                else {\n                    console.log('does not exist')\n                }\n            })\n    })\n}"]},"metadata":{},"sourceType":"module"}