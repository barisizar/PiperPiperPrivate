{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/src/screens/Main/Navigation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport MainPage from \"./MainPage\";\nimport Chats from \"./Chats\";\nimport Profile from \"./Profile\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, clearData } from \"../redux/actions/index\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Icon2 from '@expo/vector-icons/Entypo';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nvar Tab = createMaterialTopTabNavigator();\nexport var BottomTabNavigator = function (_Component) {\n  _inherits(BottomTabNavigator, _Component);\n\n  var _super = _createSuper(BottomTabNavigator);\n\n  function BottomTabNavigator() {\n    _classCallCheck(this, BottomTabNavigator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BottomTabNavigator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Tab.Navigator, {\n        tabBarOptions: {\n          activeTintColor: '#f2404c',\n          inactiveTintColor: '#000119',\n          style: {\n            height: 95,\n            justifyContent: 'center',\n            paddingVertical: 33,\n            backgroundColor: '#FFF',\n            elevation: 2\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"MainPage\",\n        component: MainPage,\n        navigation: this.props.navigation,\n        options: {\n          tabBarLabel: 'Main'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Chats\",\n        component: Chats,\n        navigation: this.props.navigation,\n        options: {\n          tabBarLabel: 'Chats'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: Profile,\n        navigation: this.props.navigation,\n        options: {\n          tabBarLabel: 'Profile'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }\n      }));\n    }\n  }]);\n\n  return BottomTabNavigator;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(BottomTabNavigator);","map":{"version":3,"sources":["/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/src/screens/Main/Navigation.js"],"names":["React","Component","MainPage","Chats","Profile","connect","bindActionCreators","fetchUser","clearData","Icon","Icon2","createMaterialTopTabNavigator","EmptyScreen","Tab","BottomTabNavigator","props","activeTintColor","inactiveTintColor","style","height","justifyContent","paddingVertical","backgroundColor","elevation","navigation","tabBarLabel","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP;AACA,OAAOC,OAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,SAAT,EAAoBC,SAApB;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,SAASC,6BAAT,QAA8C,qCAA9C;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,SAAQ,IAAR;AACH,CAFD;;AAIA,IAAMC,GAAG,GAAGF,6BAA6B,EAAzC;AACA,WAAaG,kBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCACwB;AAChB,WAAKC,KAAL,CAAWP,SAAX;AACA,WAAKO,KAAL,CAAWR,SAAX;AACH;AAJL;AAAA;AAAA,6BAKY;AACR,aACI,oBAAC,GAAD,CAAK,SAAL;AACI,QAAA,aAAa,EAAE;AACXS,UAAAA,eAAe,EAAC,SADL;AAEXC,UAAAA,iBAAiB,EAAC,SAFP;AAGXC,UAAAA,KAAK,EAAC;AACFC,YAAAA,MAAM,EAAC,EADL;AAEFC,YAAAA,cAAc,EAAC,QAFb;AAGFC,YAAAA,eAAe,EAAC,EAHd;AAIFC,YAAAA,eAAe,EAAC,MAJd;AAKFC,YAAAA,SAAS,EAAC;AALR;AAHK,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaQ,oBAAC,GAAD,CAAK,MAAL;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,SAAS,EAAErB,QAFf;AAGI,QAAA,UAAU,EAAE,KAAKa,KAAL,CAAWS,UAH3B;AAII,QAAA,OAAO,EAAE;AACLC,UAAAA,WAAW,EAAC;AADP,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbR,EAyBS,oBAAC,GAAD,CAAK,MAAL;AACG,QAAA,IAAI,EAAC,OADR;AAEG,QAAA,SAAS,EAAEtB,KAFd;AAGG,QAAA,UAAU,EAAE,KAAKY,KAAL,CAAWS,UAH1B;AAIG,QAAA,OAAO,EAAE;AACLC,UAAAA,WAAW,EAAC;AADP,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBT,EAqCS,oBAAC,GAAD,CAAK,MAAL;AACG,QAAA,IAAI,EAAC,SADR;AAEG,QAAA,SAAS,EAAErB,OAFd;AAGG,QAAA,UAAU,EAAE,KAAKW,KAAL,CAAWS,UAH1B;AAIG,QAAA,OAAO,EAAE;AACLC,UAAAA,WAAW,EAAC;AADP,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCT,CADJ;AAoDH;AA1DD;;AAAA;AAAA,EAAwCxB,SAAxC;;AA4DA,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCC,IAAAA,WAAW,EAAED,KAAK,CAACE,SAAN,CAAgBD;AADG,GAAZ;AAAA,CAAxB;;AAGA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAczB,kBAAkB,CAAC;AAAEC,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,SAAS,EAATA;AAAb,GAAD,EAA2BuB,QAA3B,CAAhC;AAAA,CAAzB;;AAEA,eAAe1B,OAAO,CAACqB,eAAD,EAAkBI,gBAAlB,CAAP,CAA2ChB,kBAA3C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport MainPage from './MainPage'\nimport Chats from './Chats';\nimport Profile from './Profile';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUser, clearData } from '../redux/actions/index';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport Icon2 from '@expo/vector-icons/Entypo';\n\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nconst EmptyScreen = () => {\n    return (null)\n}\n\nconst Tab = createMaterialTopTabNavigator();\nexport class BottomTabNavigator extends Component {\n    componentDidMount() {\n        this.props.clearData();\n        this.props.fetchUser();\n    }\n    render(){\n    return (\n        <Tab.Navigator \n            tabBarOptions={{\n                activeTintColor:'#f2404c',\n                inactiveTintColor:'#000119',\n                style:{\n                    height:95,\n                    justifyContent:'center',\n                    paddingVertical:33,\n                    backgroundColor:'#FFF',\n                    elevation:2\n                }\n            }}\n        >\n                <Tab.Screen\n                    name='MainPage'\n                    component={MainPage}\n                    navigation={this.props.navigation}\n                    options={{\n                        tabBarLabel:'Main',\n                        // tabBarIcon:({color,size})=>(\n                        //     <Icon name=\"copy-outline\" size={30} color={color} />\n                            \n                        // )\n                    }}\n                />\n                 <Tab.Screen\n                    name='Chats'\n                    component={Chats}\n                    navigation={this.props.navigation}\n                    options={{\n                        tabBarLabel:'Chats',\n                        // tabBarIcon:({color,size})=>(\n                        //     <Icon2 name='chat' color={color} size={30}/>\n                            \n                        // )\n                    }}\n                />\n                 <Tab.Screen\n                    name='Profile'\n                    component={Profile}\n                    navigation={this.props.navigation}\n                    options={{\n                        tabBarLabel:'Profile',\n                        // tabBarIcon:({color,size})=>(\n                        //     <Icon name='ios-person' color={color} size={30}/>\n                            \n                        // )\n                    }}\n                />\n        </Tab.Navigator>\n    );\n};\n}\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUser, clearData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(BottomTabNavigator);"]},"metadata":{},"sourceType":"module"}