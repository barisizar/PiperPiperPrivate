{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"./src/screens/HomeScreen.js\";\nimport LoginScreen from \"./src/screens/LoginScreen.js\";\nimport SignUpScreen from \"./src/screens/SignUpScreen.js\";\nimport MainPage from \"./src/screens/Main/MainPage\";\nimport LoadingScreen from \"./src/screens/LoadingScreen.js\";\nimport * as firebase from 'firebase';\nimport render from \"react-native-web/dist/exports/render\";\nvar Stack = createStackNavigator();\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAtc5ITYl7p5gy94IVu_rehwdSE6V89g24\",\n  authDomain: \"piper-6f968.firebaseapp.com\",\n  projectId: \"piper-6f968\",\n  storageBucket: \"piper-6f968.appspot.com\",\n  messagingSenderId: \"296533610617\",\n  appId: \"1:296533610617:web:d19f0704ab3b2a54b144a8\",\n  measurementId: \"G-PSH1VC8JGC\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }, \"Loading...\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 5\n          }\n        }, React.createElement(Stack.Navigator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Sign Up\",\n          component: SignUpScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }\n        })));\n      }\n\n      ;\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 3\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainPage,\n        options: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/App.js"],"names":["StatusBar","React","Component","NavigationContainer","createStackNavigator","HomeScreen","LoginScreen","SignUpScreen","MainPage","LoadingScreen","firebase","Stack","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {Component} from 'react';\nimport { StyleSheet, Text, View, Image, TouchableOpacity} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport HomeScreen from './src/screens/HomeScreen.js';\nimport LoginScreen from './src/screens/LoginScreen.js';\nimport SignUpScreen from './src/screens/SignUpScreen.js';\nimport MainPage from './src/screens/Main/MainPage';\nimport LoadingScreen from './src/screens/LoadingScreen.js';\n\nimport * as firebase from 'firebase'\nimport { render } from 'react-native-web';\n\n\nconst Stack = createStackNavigator();\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAtc5ITYl7p5gy94IVu_rehwdSE6V89g24\",\n  authDomain: \"piper-6f968.firebaseapp.com\",\n  projectId: \"piper-6f968\",\n  storageBucket: \"piper-6f968.appspot.com\",\n  messagingSenderId: \"296533610617\",\n  appId: \"1:296533610617:web:d19f0704ab3b2a54b144a8\",\n  measurementId: \"G-PSH1VC8JGC\"\n};\n\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n}\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n    }\n  }\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.setState({\n          loggedIn: false,\n          loaded: true,\n        })\n      } else {\n        this.setState({\n          loggedIn: true,\n          loaded: true,\n        })\n      }\n    })\n  }\n  render() {\n    const { loggedIn, loaded } = this.state;\n    if (!loaded) {\n      return (\n        <View>\n          <Text>Loading...</Text>\n        </View>\n    //     <NavigationContainer>\n    //   <Stack.Navigator>\n \n    //     <Stack.Screen name=\"Loading\" component={LoadingScreen} options={{ headerShown: false }}/>\n        \n\n    //   </Stack.Navigator>\n    // </NavigationContainer>\n      )\n    }\n\n    if (!loggedIn) {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n \n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }}/>\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Sign Up\" component={SignUpScreen} />\n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\nreturn (\n\n  <NavigationContainer >\n    <Stack.Navigator initialRouteName=\"Main\">\n      <Stack.Screen name=\"Main\" component={MainPage}  options={{ headerShown: false }} />\n    </Stack.Navigator>\n  </NavigationContainer>\n\n)\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}