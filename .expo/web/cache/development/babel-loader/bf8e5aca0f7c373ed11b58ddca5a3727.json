{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/src/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase';\nexport var Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function (result) {\n        console.log(result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputBox,\n        value: this.state.email,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        placeholder: \"Email\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onSignUp();\n        },\n        style: {\n          marginLeft: 3,\n          width: \"45%\",\n          backgroundColor: \"#042494\",\n          borderRadius: 25,\n          height: 50,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: 40,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"Login\")), React.createElement(Button, {\n        title: \"Don't have an account yet? Sign up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e7e4d9',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputBox: {\n    width: '85%',\n    margin: 10,\n    padding: 15,\n    fontSize: 16,\n    borderColor: '#d3d3d3',\n    borderBottomWidth: 1,\n    textAlign: 'center'\n  },\n  button: {\n    marginTop: 30,\n    marginBottom: 20,\n    paddingVertical: 5,\n    alignItems: 'center',\n    backgroundColor: '#F6820D',\n    borderColor: '#F6820D',\n    borderWidth: 1,\n    borderRadius: 5,\n    width: 200\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  buttonSignup: {\n    fontSize: 12\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/src/screens/LoginScreen.js"],"names":["React","Component","firebase","Login","props","state","email","password","onSignUp","bind","auth","signInWithEmailAndPassword","then","result","console","log","catch","error","styles","container","inputBox","setState","marginLeft","width","backgroundColor","borderRadius","height","alignItems","justifyContent","marginTop","marginBottom","buttonText","StyleSheet","create","flex","margin","padding","fontSize","borderColor","borderBottomWidth","textAlign","button","paddingVertical","borderWidth","fontWeight","color","buttonSignup"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AAEA,WAAaC,KAAb;AAAA;;AAAA;;AACI,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AARe;AASlB;;AAVL;AAAA;AAAA,+BAYe;AAAA,wBACqB,KAAKJ,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAEPL,MAAAA,QAAQ,CAACQ,IAAT,GAAgBC,0BAAhB,CAA2CL,KAA3C,EAAkDC,QAAlD,EACKK,IADL,CACU,UAACC,MAAD,EAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,OAHL,EAIKG,KAJL,CAIW,UAACC,KAAD,EAAW;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,OANL;AAOH;AArBL;AAAA;AAAA,6BAuBa;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAED,MAAM,CAACE,QADlB;AAEI,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,KAFtB;AAGI,QAAA,YAAY,EAAE,sBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEf,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAJ;AAAA,SAHvB;AAII,QAAA,WAAW,EAAC,OAJhB;AAKI,QAAA,cAAc,EAAC,MALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEY,MAAM,CAACE,QADlB;AAEI,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWE,QAFtB;AAGI,QAAA,YAAY,EAAE,sBAAAA,QAAQ;AAAA,iBAAI,MAAI,CAACc,QAAL,CAAc;AAAEd,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAJ;AAAA,SAH1B;AAII,QAAA,WAAW,EAAC,UAJhB;AAKI,QAAA,eAAe,EAAE,IALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAeI,oBAAC,gBAAD;AACA,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,QAAL,EAAN;AAAA,SADT;AAEA,QAAA,KAAK,EAAE;AAACc,UAAAA,UAAU,EAAE,CAAb;AAAgBC,UAAAA,KAAK,EAAC,KAAtB;AAA6BC,UAAAA,eAAe,EAAC,SAA7C;AAAwDC,UAAAA,YAAY,EAAC,EAArE;AAAyEC,UAAAA,MAAM,EAAC,EAAhF;AAAoFC,UAAAA,UAAU,EAAC,QAA/F;AAAyGC,UAAAA,cAAc,EAAC,QAAxH;AAAkIC,UAAAA,SAAS,EAAC,EAA5I;AAAgJC,UAAAA,YAAY,EAAC;AAA7J,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACa,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CAfJ,EAoBI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBJ,CADJ;AAwBH;AAhDL;;AAAA;AAAA,EAA2B9B,SAA3B;AAkDA,IAAMiB,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC7Bd,EAAAA,SAAS,EAAE;AACPe,IAAAA,IAAI,EAAE,CADC;AAEPV,IAAAA,eAAe,EAAE,SAFV;AAGPG,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BR,EAAAA,QAAQ,EAAE;AACNG,IAAAA,KAAK,EAAE,KADD;AAENY,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,OAAO,EAAE,EAHH;AAINC,IAAAA,QAAQ,EAAE,EAJJ;AAKNC,IAAAA,WAAW,EAAE,SALP;AAMNC,IAAAA,iBAAiB,EAAE,CANb;AAONC,IAAAA,SAAS,EAAE;AAPL,GAPmB;AAgB7BC,EAAAA,MAAM,EAAE;AACJZ,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,YAAY,EAAE,EAFV;AAGJY,IAAAA,eAAe,EAAE,CAHb;AAIJf,IAAAA,UAAU,EAAE,QAJR;AAKJH,IAAAA,eAAe,EAAE,SALb;AAMJc,IAAAA,WAAW,EAAE,SANT;AAOJK,IAAAA,WAAW,EAAE,CAPT;AAQJlB,IAAAA,YAAY,EAAE,CARV;AASJF,IAAAA,KAAK,EAAE;AATH,GAhBqB;AA2B7BQ,EAAAA,UAAU,EAAE;AACRM,IAAAA,QAAQ,EAAE,EADF;AAERO,IAAAA,UAAU,EAAE,MAFJ;AAGRC,IAAAA,KAAK,EAAE;AAHC,GA3BiB;AAgC7BC,EAAAA,YAAY,EAAE;AACVT,IAAAA,QAAQ,EAAE;AADA;AAhCe,CAAlB,CAAf;AAoCA,eAAelC,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, Text, View,  Button, TextInput,Image, TouchableOpacity} from 'react-native';\nimport firebase from 'firebase'\n\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n        }\n\n        this.onSignUp = this.onSignUp.bind(this)\n    }\n\n    onSignUp() {\n        const { email, password } = this.state;\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                console.log(result)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n                <TextInput\n                    style={styles.inputBox}\n                    value={this.state.email}\n                    onChangeText={email => this.setState({ email })}\n                    placeholder='Email'\n                    autoCapitalize='none'\n                />\n                <TextInput\n                    style={styles.inputBox}\n                    value={this.state.password}\n                    onChangeText={password => this.setState({ password })}\n                    placeholder='Password'\n                    secureTextEntry={true}\n                />\n                <TouchableOpacity \n                onPress={() => this.onSignUp()}\n                style={{marginLeft: 3, width:\"45%\", backgroundColor:\"#042494\", borderRadius:25, height:50, alignItems:\"center\", justifyContent:\"center\", marginTop:40, marginBottom:10}}>\n                    <Text style={styles.buttonText}>Login</Text>\n                </TouchableOpacity>\n                <Button title=\"Don't have an account yet? Sign up\" />\n            </View>\n        )\n    }\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#e7e4d9',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    inputBox: {\n        width: '85%',\n        margin: 10,\n        padding: 15,\n        fontSize: 16,\n        borderColor: '#d3d3d3',\n        borderBottomWidth: 1,\n        textAlign: 'center'\n    },\n    button: {\n        marginTop: 30,\n        marginBottom: 20,\n        paddingVertical: 5,\n        alignItems: 'center',\n        backgroundColor: '#F6820D',\n        borderColor: '#F6820D',\n        borderWidth: 1,\n        borderRadius: 5,\n        width: 200\n    },\n    buttonText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: '#fff'\n    },\n    buttonSignup: {\n        fontSize: 12\n    }\n})\nexport default Login"]},"metadata":{},"sourceType":"module"}