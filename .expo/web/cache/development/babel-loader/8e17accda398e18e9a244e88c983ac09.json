{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/src/screens/SignUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nexport var SignUpScreen = function (_Component) {\n  _inherits(SignUpScreen, _Component);\n\n  var _super = _createSuper(SignUpScreen);\n\n  function SignUpScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: '',\n      name: ''\n    };\n    return _this;\n  }\n\n  _createClass(SignUpScreen, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          name = _this$state.name;\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n          name: name,\n          email: email\n        });\n        console.log(firebase.auth().currentUser.uid);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputBox,\n        value: this.state.name,\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        placeholder: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        value: this.state.email,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        placeholder: \"Email\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onSignUp();\n        },\n        style: {\n          marginLeft: 3,\n          width: \"45%\",\n          backgroundColor: \"#042494\",\n          borderRadius: 25,\n          height: 50,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: 40,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, \"Sign Up\")));\n    }\n  }]);\n\n  return SignUpScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e7e4d9',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputBox: {\n    width: '85%',\n    margin: 10,\n    padding: 15,\n    fontSize: 16,\n    borderColor: '#d3d3d3',\n    borderBottomWidth: 1,\n    textAlign: 'center'\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  buttonSignup: {\n    fontSize: 12\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["/Users/barisizar/Desktop/ReactNative/PiedPiper1/piper/PiperPiperPrivate/src/screens/SignUpScreen.js"],"names":["StatusBar","React","Component","firebase","SignUpScreen","props","state","email","password","name","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","console","log","catch","error","styles","container","inputBox","setState","onSignUp","marginLeft","width","backgroundColor","borderRadius","height","alignItems","justifyContent","marginTop","marginBottom","buttonText","StyleSheet","create","flex","margin","padding","fontSize","borderColor","borderBottomWidth","textAlign","fontWeight","color","buttonSignup"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {Component} from 'react';\nimport { StyleSheet, Text, View, Image, TextInput,Button, TouchableOpacity} from 'react-native';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nexport class SignUpScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    \n    onSignUp() {\n        const { email, password, name } = this.state;\n        \n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((result) => {\n                firebase.firestore().collection(\"users\")\n                    .doc(firebase.auth().currentUser.uid)\n                    .set({\n                        name,\n                        email\n                    })\n                console.log(firebase.auth().currentUser.uid)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    render() {\n        return (\n          <View style={styles.container}>\n              <TextInput\n                  style={styles.inputBox}\n                  value={this.state.name}\n                  onChangeText={name => this.setState({ name })}\n                  placeholder='Name'\n              />\n              <TextInput\n                  style={styles.inputBox}\n                  value={this.state.email}\n                  onChangeText={email => this.setState({ email })}\n                  placeholder='Email'\n                  autoCapitalize='none'\n              />\n              <TextInput\n                  style={styles.inputBox}\n                  value={this.state.password}\n                  onChangeText={password => this.setState({ password })}\n                  placeholder='Password'\n                  secureTextEntry={true}\n              />\n              <TouchableOpacity \n              onPress={() => this.onSignUp()}\n              style={{marginLeft: 3, width:\"45%\", backgroundColor:\"#042494\", borderRadius:25, height:50, alignItems:\"center\", justifyContent:\"center\", marginTop:40, marginBottom:10}}>\n                  <Text style={styles.buttonText}>Sign Up</Text>\n              </TouchableOpacity>\n          </View>\n      )\n    }\n}\nconst styles = StyleSheet.create({\n  container: {\n      flex: 1,\n      backgroundColor: '#e7e4d9',\n      alignItems: 'center',\n      justifyContent: 'center'\n  },\n  inputBox: {\n      width: '85%',\n      margin: 10,\n      padding: 15,\n      fontSize: 16,\n      borderColor: '#d3d3d3',\n      borderBottomWidth: 1,\n      textAlign: 'center'\n  },\n  buttonText: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: '#fff'\n  },\n  buttonSignup: {\n      fontSize: 12\n  }\n})\n\nexport default SignUpScreen;\n\n"]},"metadata":{},"sourceType":"module"}